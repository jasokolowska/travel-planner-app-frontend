{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, switchMap, of } from 'rxjs';\nimport * as FlightSearchActions from '../store/flight-search.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../services/search.service\";\nexport let SearchFlightsEffect = /*#__PURE__*/(() => {\n  class SearchFlightsEffect {\n    constructor(actions$, searchService) {\n      this.actions$ = actions$;\n      this.searchService = searchService;\n      this.loadSearchFlightsResults$ = createEffect(() => this.actions$.pipe(ofType(FlightSearchActions.loadFlightResults), switchMap(({\n        searchParamters\n      }) => this.searchService.searchFlight(searchParamters).pipe(map(searchFlightResults => {\n        return FlightSearchActions.loadFlightResultsSuccess({\n          searchFlightResults\n        });\n      }), catchError(() => {\n        return of(FlightSearchActions.loadFlightResultsFailure());\n      })))));\n    }\n\n  }\n\n  SearchFlightsEffect.ɵfac = function SearchFlightsEffect_Factory(t) {\n    return new (t || SearchFlightsEffect)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.SearchService));\n  };\n\n  SearchFlightsEffect.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SearchFlightsEffect,\n    factory: SearchFlightsEffect.ɵfac\n  });\n  return SearchFlightsEffect;\n})();","map":null,"metadata":{},"sourceType":"module"}